#include <stdio.h>
#include <stdlib.h>
#include <string.h>

struct symtab {
    char label[20];
    int addr;
};

struct symtab sy[50];
int cnt = 0;

void insert();
int search(char *);
void display();
void modify();

int main() {
    int ch;
    char lab[10];
    
    do {
        printf("\n1.insert\n2.display\n3.search\n4.modify\n5.exit\n");
        scanf("%d", &ch);
        
        switch (ch) {
            case 1:
                insert();
                break;
            case 2:
                display();
                break;
            case 3:
                printf("enter the label");
                scanf("%s", lab);
                if (search(lab) == 1)
                    printf("label is found");
                else
                    printf("label is not found");
                break;
            case 4:
                modify();
                break;
            case 5:
                exit(0);
                break;
        }
    } while (ch < 5);
}

void insert() {
    char lab[10];
    printf("enter the label");
    scanf("%s", lab);
    
    if (search(lab) == 1)
        printf("duplicate symbol");
    else {
        strcpy(sy[cnt].label, lab);
        printf("enter the address");
        scanf("%d", &sy[cnt++].addr);
    }
}

int search(char *s) {
    for (int i = 0; i < cnt; i++) {
        if (strcmp(sy[i].label, s) == 0)
            return 1;
    }
    return 0;
}

void modify() {
    char lab[10];
    printf("enter the label:");
    scanf("%s", lab);
    
    int i;
    for (i = 0; i < cnt; i++) {
        if (strcmp(sy[i].label, lab) == 0) {
            printf("label is found\n");
            printf("enter the address:");
            scanf("%d", &sy[i].addr);
            break; // Break out of the loop once the label is found
        }
    }

    if (i == cnt) {
        printf("no such symbol\n");
    }
}


void display() {
    for (int i = 0; i < cnt; i++)
        printf("%s\t%d\n", sy[i].label, sy[i].addr);
}
